{
  "name": "Blog to LinkedIn Promo",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 10 * * *"
            }
          ]
        }
      },
      "id": "aca788a5-c76f-4d6a-a5e0-bb8f791565f9",
      "name": "Daily 10 AM Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -896,
        528
      ]
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "value": "https://www.notion.so/9d899a561818444f8de1d7bd72ee1528?v=25390f46679580bcb9bc000cc4a3bf1e&source=copy_link",
          "mode": "url"
        },
        "filterType": "manual",
        "filters": {
          "conditions": [
            {
              "key": "Status|select",
              "condition": "equals",
              "selectValue": "Published"
            },
            {
              "key": "Target Channel|select",
              "condition": "equals",
              "selectValue": "blog"
            }
          ]
        },
        "options": {}
      },
      "id": "27c0f256-95b3-4cdf-8890-1939ee2f39aa",
      "name": "Fetch Published Blog Posts",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        -688,
        528
      ],
      "credentials": {
        "notionApi": {
          "id": "lC4G957VFihVvFG2",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Filter for blogs needing LinkedIn promotion\nconst blogs = $input.all();\nconst needsPromo = [];\n\nfor (const blog of blogs) {\n  const json = blog.json;\n\n  // Check if it needs promo and hasn't been generated yet\n  const willGeneratePromo =\n    json.properties?.[\"Will Generate LinkedIn Promo\"]?.checkbox === true;\n  const alreadyGenerated =\n    json.properties?.[\"LinkedIn Promo Generated\"]?.checkbox === true;\n  const publishedDate = json.properties?.[\"Publish Date\"]?.date?.start\n    ? new Date(json.properties[\"Publish Date\"].date.start)\n    : null;\n\n  // Only generate promo for posts published in last 7 days\n  const daysSincePublished = publishedDate\n    ? (Date.now() - publishedDate.getTime()) / (1000 * 60 * 60 * 24)\n    : 999;\n\n  if (willGeneratePromo && !alreadyGenerated && daysSincePublished <= 7) {\n    needsPromo.push({\n      json: {\n        notion_page_id: json.id,\n        blog_title:\n          json.properties?.Title?.title?.[0]?.plain_text || \"Untitled\",\n        blog_slug: json.properties?.slug?.rich_text?.[0]?.plain_text || \"\",\n        blog_excerpt:\n          json.properties?.Description?.rich_text?.[0]?.plain_text || \"\",\n        content_pillar: json.properties?.[\"Content Pillar\"]?.select?.name || \"\",\n        blog_url: `https://xavierfuentes.com/${\n          json.properties?.slug?.rich_text?.[0]?.plain_text || \"\"\n        }`,\n        published_date: json.properties?.[\"Publish Date\"]?.date?.start,\n        days_since_published: Math.round(daysSincePublished),\n      },\n    });\n  }\n}\n\nconsole.log(`Found ${needsPromo.length} blog posts needing LinkedIn promotion`);\n\nreturn needsPromo.length > 0 ? needsPromo : [];\n"
      },
      "id": "2a9099ac-25fa-471f-8ef7-3c0567f086e1",
      "name": "Filter Blogs Needing Promo",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -464,
        528
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Prepare LinkedIn promotion file for GitHub\nconst item = $input.item.json;\n\n// Extract generated content from OpenAI response\nconst linkedinContent = item.message?.content || item.text || \"\";\n\n// Create slug for LinkedIn promo\nconst slug = `${item.blog_slug}-linkedin-promo`;\n\n// Generate frontmatter and content\nconst markdown = `---\n  title: \"New: ${item.blog_title}\"\n  slug: ${slug}\n  status: draft\n  target_channel: linkedin-promotion\n  content_pillar: ${item.content_pillar}\n  blog_post_slug: ${item.blog_slug}\n  blog_post_url: ${item.blog_url}\n  linkedin_day: various\n  autogenerated: true\n  generated_date: ${new Date().toISOString().split(\"T\")[0]}\n  ---\n\n  ${linkedinContent}\n\n  ---\n\n  *Auto-generated LinkedIn promotion for blog post: ${item.blog_title}*\n  *Read the full article: ${item.blog_url}*`;\n\n// Generate filename with date prefix\nconst now = new Date();\nconst datePrefix = now.toISOString().split(\"T\")[0]; // YYYY-MM-DD format\nconst filename = `${datePrefix}-${slug}.md`;\n\nreturn {\n  json: {\n    notion_page_id: item.notion_page_id,\n    blog_slug: item.blog_slug,\n    blog_title: item.blog_title,\n    blog_url: item.blog_url,\n    markdown_content: markdown,\n    filename: filename,\n    file_path: `content/linkedin/${filename}`,\n    commit_message: `feat: add LinkedIn promotion for \"${item.blog_title}\"`,\n  },\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        512,
        528
      ],
      "id": "f5454842-0996-411e-8c4a-f501fc59c64e",
      "name": "Prepare LinkedIn File"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "xavierfuentes",
          "mode": "list",
          "cachedResultName": "xavierfuentes",
          "cachedResultUrl": "https://github.com/xavierfuentes"
        },
        "repository": {
          "__rl": true,
          "value": "xavierfuentes.com",
          "mode": "list",
          "cachedResultName": "xavierfuentes.com",
          "cachedResultUrl": "https://github.com/xavierfuentes/xavierfuentes.com"
        },
        "filePath": "=content/posts/{{ $json.blog_slug }}.md",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        -256,
        528
      ],
      "id": "c67f0d57-a5e6-40dc-973f-f9e66b7dd7dc",
      "name": "Fetch Blog Content from GitHub",
      "webhookId": "bc3f88d3-8040-427e-a30d-0898f6e8b52e",
      "credentials": {
        "githubOAuth2Api": {
          "id": "cN5XUzR6Vu9DDZCZ",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Extract blog content (first 1000 chars for context)\nconst item = $input.item.json;\nconst fullContent = item.content || '';\n\n// Remove frontmatter\nconst contentWithoutFrontmatter = fullContent.replace(/^---[\\s\\S]*?---\\n/, '');\n\n// Get first 1000 characters for context\nconst contentSummary = contentWithoutFrontmatter.substring(0, 1000);\n\nreturn {\n  json: {\n    ...item,\n    blog_content_summary: contentSummary,\n    blog_full_length: fullContent.length\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -48,
        528
      ],
      "id": "8330065b-2222-4a28-9905-83b303812ae1",
      "name": "Extract Blog Content"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "xavierfuentes",
          "mode": "list",
          "cachedResultName": "xavierfuentes",
          "cachedResultUrl": "https://github.com/xavierfuentes"
        },
        "repository": {
          "__rl": true,
          "value": "xavierfuentes.com",
          "mode": "list",
          "cachedResultName": "xavierfuentes.com",
          "cachedResultUrl": "https://github.com/xavierfuentes/xavierfuentes.com"
        },
        "filePath": "={{ $json.file_path }}",
        "fileContent": "={{ $json.markdown_content }}",
        "commitMessage": "={{ $json.commit_message }}",
        "additionalParameters": {
          "author": {
            "name": "Xavier Fuentes",
            "email": "me@xavierfuentes.com"
          }
        }
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        720,
        528
      ],
      "id": "a0072a96-88ef-4565-9db0-9afc07d3be60",
      "name": "Commit LinkedIn Promo to GitHub",
      "webhookId": "41578ad6-38f2-4314-bfb3-4153b9093135",
      "credentials": {
        "githubOAuth2Api": {
          "id": "cN5XUzR6Vu9DDZCZ",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "messages": {
          "values": [
            {
              "content": "You are a LinkedIn content strategist creating promotion posts for blog articles. You MUST write in UK English only (optimise, realise, colour, whilst, organisation, analyse).",
              "role": "system"
            },
            {
              "content": "Create a LinkedIn promotion post for this blog article.\n\n## CRITICAL REQUIREMENTS\n\n1. **LENGTH**: 150-300 words (LinkedIn optimal length for engagement)\n2. **UK ENGLISH ONLY**: optimise, realise, colour, whilst, organisation, analyse\n3. **STRUCTURE**: Hook → Value proposition → Call to action\n\n## BLOG POST DETAILS\n\n**Title:** {{ $json.blog_title }}\n**Excerpt:** {{ $json.blog_excerpt }}\n**Content Pillar:** {{ $json.content_pillar }}\n**Article URL:** {{ $json.blog_url }}\n**Published:** {{ $json.days_since_published }} days ago\n\n**Blog Content Summary:**\n{{ $json.blog_content_summary }}\n\n## LINKEDIN PROMOTION POST REQUIREMENTS\n\n**Goal:** Drive traffic to the blog post whilst providing immediate value\n\n**Structure:**\n1. **Hook (1-2 lines):** Start with a provocative question or bold statement related to the blog's main insight\n2. **Teaser (3-4 lines):** Share ONE specific insight or framework from the article that demonstrates value\n3. **Social Proof/Context (2-3 lines):** Why this matters now, who it's for, what problem it solves\n4. **Call to Action (1-2 lines):** Clear invitation to read the full article with benefit statement\n\n**Style Guidelines:**\n- Conversational and direct (not salesy)\n- Use short paragraphs with white space\n- Include one emoji maximum (if appropriate)\n- Focus on reader benefit, not self-promotion\n- End with \"Link in comments 👇\" or similar CTA\n\n## OUTPUT FORMAT\n\nReturn ONLY the LinkedIn post text. No explanations, no meta-commentary."
            }
          ]
        },
        "options": {
          "maxTokens": 500,
          "temperature": 0.7
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        160,
        528
      ],
      "id": "0d67f8f9-8fe2-49ae-853e-3f646985da91",
      "name": "Generate LinkedIn Promotion",
      "credentials": {
        "openAiApi": {
          "id": "rkhOcSQmlsa0zqls",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "update",
        "pageId": {
          "__rl": true,
          "value": "{{ $json.notion_page_id }}",
          "mode": "id"
        },
        "propertiesUi": {
          "propertyValues": [
            {}
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        928,
        528
      ],
      "id": "0caf2053-9951-4c91-80ed-be3e7a82dbab",
      "name": "Mark Promo Generated in Notion",
      "credentials": {
        "notionApi": {
          "id": "lC4G957VFihVvFG2",
          "name": "Notion account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Daily 10 AM Trigger": {
      "main": [
        [
          {
            "node": "Fetch Published Blog Posts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Published Blog Posts": {
      "main": [
        [
          {
            "node": "Filter Blogs Needing Promo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Blogs Needing Promo": {
      "main": [
        [
          {
            "node": "Fetch Blog Content from GitHub",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare LinkedIn File": {
      "main": [
        [
          {
            "node": "Commit LinkedIn Promo to GitHub",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Blog Content from GitHub": {
      "main": [
        [
          {
            "node": "Extract Blog Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Blog Content": {
      "main": [
        [
          {
            "node": "Generate LinkedIn Promotion",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate LinkedIn Promotion": {
      "main": [
        [
          {
            "node": "Prepare LinkedIn File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Commit LinkedIn Promo to GitHub": {
      "main": [
        [
          {
            "node": "Mark Promo Generated in Notion",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d24e637e-c4f1-436e-ba3d-1a46f4150449",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "d052f68fee6cbc1f0a1b7b4daa7281384655d7a51d1cb62c7e57bbd86329486d"
  },
  "id": "1NpXjFfqix8l68sw",
  "tags": []
}